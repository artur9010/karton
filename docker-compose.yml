version: '3.7'

services:
  # nginx auto-proxy
  nginx:
    image: nginxproxy/nginx-proxy:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
  # rclone mount s3
  rclone:
    image: mumiehub/rclone-mount
    container_name: karton_rclone
    restart: always
    devices:
      - "/dev/fuse"
    environment:
      - "RemotePath=karton:"
      - MountCommands=--default-permissions --allow-other --dir-perms 0777 --file-perms 0777 --umask 000 --uid 1000 --gid 1000 --allow-non-empty --vfs-cache-mode full
    volumes:
      - ./rclone.conf:/config/.rclone.conf
      - /mnt/mediaefs:/mnt/mediaefs:shared
    security_opt:
      - apparmor:unconfined
    cap_add:
      - SYS_ADMIN
    healthcheck:
      test: ls /mnt/mediaefs/karton || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
  # samba
  samba:  
    image: m4rc77/samba
    container_name: karton_samba  
    network_mode: host
    restart: always
    depends_on:
      - "rclone"
    environment:  
      - TZ=UTC
      - WORKGROUP=workgroup  
      - USER=artur9010;haseuko;1000;artur9010;1000
      - RECYCLE=false
    volumes:  
      - /mnt/mediaefs/karton:/karton:shared
    command: '-n -r -p -g "fruit:appl = yes" -g "fruit:time machine = yes" -g "fruit:time machine max size = 600G" -s "Arturowy Karton;/karton/karton;yes;no;no;artur9010;artur9010;artur9010;" -s "TimeMachine;/karton/timemachine;yes;no;no;artur9010;artur9010;artur9010;"'
  # octoprint
  octoprint:
    image: octoprint/octoprint
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=octoprint.local
      - VIRTUAL_PORT=80
    # devices:
    # use `python -m serial.tools.miniterm` to see what the name is of the printer
    #  - /dev/ttyACM0:/dev/ttyACM0
    #  - /dev/video0:/dev/video0
    volumes:
     - octoprint:/octoprint

volumes:
  octoprint:
